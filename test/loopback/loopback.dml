# 
# loopback.dml
#
#
# This network is composed of two ASes, one with a single router, and another
# with three routers connected in a line.  Despite not having a full mesh of
# physical connections, the three routers in the second AS are all running
# IBGP, and using virtual (loopback) addresses as the destination address in
# the TCP connections between themselves.  There is also a single link between
# the two ASes.  If an advertisement for the first AS reaches all of the
# routers in the second AS, then the use of the loopback addresses was
# successful.
#
#  .AS1.     .......AS2.......
#
#   RTR ===== RTR---RTR---RTR
#
#

_schema [ _find .schemas.Net ]

Net [ # the all-encompassing Net

  frequency 1000000000    # nanosecond simulation resolution

  bgpoptions [
    validation_test 13
  ]


  Net [
    id 1
    AS_status boundary
    ospf_area 0
    router [
      id 1
      graph [  
        ProtocolSession [
          name bgp  use SSF.OS.BGP4.BGPSession
          autoconfig false
          connretry_time 120  min_as_orig_time 15
          reflector false
          neighbor [ as 2  address 1(2)  use_return_address 1(1)
                     _extends .basic_ebgp_neighbor ]
        ]
        ProtocolSession [ name ospf   use SSF.OS.OSPF.sOSPF ]
        ProtocolSession [ name socket use SSF.OS.Socket.socketMaster ]
        ProtocolSession [ name tcp    use SSF.OS.TCP.tcpSessionMaster ]
        ProtocolSession [ name ip     use SSF.OS.IP  debug true ]
      ]
      interface [ id 0  virtual true ]
      interface [ id 1 ]
    ]
  ]

  Net [
    id 2
    AS_status boundary
    ospf_area 0
    router [
      id 1
      graph [  
        ProtocolSession [
          name bgp  use SSF.OS.BGP4.BGPSession
          autoconfig false
          connretry_time 120  min_as_orig_time 15
          reflector false
          neighbor [ as 1  address 1(1)   use_return_address 1(2)
                     _extends .basic_ebgp_neighbor ]
          neighbor [ as 2  address 2(0)  use_return_address 1(0)
                     _extends .basic_ibgp_neighbor ] # internal
          neighbor [ as 2  address 3(0)  use_return_address 1(0)
                     _extends .basic_ibgp_neighbor ] # internal
        ]
        ProtocolSession [ name ospf   use SSF.OS.OSPF.sOSPF ]
        ProtocolSession [ name socket use SSF.OS.Socket.socketMaster ]
        ProtocolSession [ name tcp    use SSF.OS.TCP.tcpSessionMaster ]
        ProtocolSession [ name ip     use SSF.OS.IP
                          warn_packet_drop true  warn_no_route true ]
      ]
      interface [ id 0  virtual true ]
      interface [ idrange [ from 1 to 2 ] ]
    ]
    router [
      id 2
      graph [  
        ProtocolSession [
          name bgp  use SSF.OS.BGP4.BGPSession
          autoconfig false
          connretry_time 120  min_as_orig_time 15
          reflector false
          neighbor [ as 2  address 1(0)  use_return_address 2(0)
                     _extends .basic_ibgp_neighbor ] # internal
          neighbor [ as 2  address 3(0)  use_return_address 2(0)
                     _extends .basic_ibgp_neighbor ] # internal
        ]
        ProtocolSession [ name ospf   use SSF.OS.OSPF.sOSPF ]
        ProtocolSession [ name socket use SSF.OS.Socket.socketMaster ]
        ProtocolSession [ name tcp    use SSF.OS.TCP.tcpSessionMaster ]
        ProtocolSession [ name ip     use SSF.OS.IP
                          warn_packet_drop true  warn_no_route true ]
      ]
      interface [ id 0  virtual true ]
      interface [ idrange [ from 1 to 2 ] ]
    ]
    router [
      id 3
      graph [  
        ProtocolSession [
          name bgp  use SSF.OS.BGP4.BGPSession
          autoconfig false
          connretry_time 120  min_as_orig_time 15
          reflector false
          neighbor [ as 2  address 1(0)  use_return_address 3(0)
                     _extends .basic_ibgp_neighbor ] # internal
          neighbor [ as 2  address 2(0)  use_return_address 3(0)
                     _extends .basic_ibgp_neighbor ] # internal
        ]
        ProtocolSession [ name ospf   use SSF.OS.OSPF.sOSPF ]
        ProtocolSession [ name socket use SSF.OS.Socket.socketMaster ]
        ProtocolSession [ name tcp    use SSF.OS.TCP.tcpSessionMaster ]
        ProtocolSession [ name ip     use SSF.OS.IP
                          warn_packet_drop true  warn_no_route true ]
      ]
      interface [ id 0  virtual true ]
      interface [ id 1 ]
    ]

    link [ attach 1(1) attach 2(1) ]
    link [ attach 2(2) attach 3(1) ]
  ]

  # inter-AS links
  link [ attach 1:1(1) attach 2:1(2) delay 0.01 ]

] # end all-encompassing Net
